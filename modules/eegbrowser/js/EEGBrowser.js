!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}({0:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function makeRegions(numRegions){for(var regions=[],rc=function(){return Math.floor(250*Math.random())},i=0;i<numRegions;i+=1){var center=new Array(3).fill(0).map(function(){return 2*Math.random()-1}),color={r:rc(),g:rc(),b:rc()},region=new Region("region"+i,"Region "+i,center,color);regions.push(region)}return regions}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_react=__webpack_require__(15),_react2=_interopRequireDefault(_react),_MRILoader=__webpack_require__(16),_MRILoader2=_interopRequireDefault(_MRILoader),NUM_REGIONS=8,POINTS_PER_REGION=30,SAMPLES_PER_POINT=500,LOW_PASS_FILTERS=[{key:"none",label:"No Filter"},{key:"lopass15",label:"Low Pass 15Hz"},{key:"lopass20",label:"Low Pass 20Hz"},{key:"lopass30",label:"Low Pass 30Hz"},{key:"lopass40",label:"Low Pass 40Hz"}],HIGH_PASS_FILTERS=[{key:"none",label:"No Filter"},{key:"hipass0_5",label:"High Pass 0.5Hz"},{key:"hipass1",label:"High Pass 1Hz"},{key:"hipass5",label:"High Pass 5Hz"},{key:"hipass10",label:"High Pass 10Hz"}],FILTERS={lopass15:{b:[.080716994603448,.072647596309189,.080716994603448],a:[1,-1.27986023820987,.527812029663189]},lopass20:{b:[.113997925584386,.149768961515167,.113997925584386],a:[1,-1.036801335341888,.43695012041825]},lopass30:{b:[.192813914343002,.325725940431161,.192813914343002],a:[1,-.570379950222695,.323884080078956]},lopass40:{b:[.281307434361307,.517866041871659,.281307434361307],a:[1,-.135289362582513,.279792792112445]},hipass0_5:{b:[.937293010134975,-1.874580964130496,.937293010134975],a:[1,-1.985579602684723,.985739491853153]},hipass1:{b:[.930549324176904,-1.861078566912498,.930549324176904],a:[1,-1.971047525054235,.971682555986628]},hipass5:{b:[.877493430773021,-1.754511635757187,.877493430773021],a:[1,-1.851210698908115,.866238657864428]},hipass10:{b:[.81345216101175,-1.625120853023986,.81345216101175],a:[1,-1.694160769645868,.750559011393507]}},Region=function(){function Region(name,label,center){var color=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{r:0,g:0,b:0};_classCallCheck(this,Region),this.name=name,this.label=label,this.color=color,this.points=[],this.generatePoints(POINTS_PER_REGION,center)}return _createClass(Region,[{key:"generatePoints",value:function(numPoints,center){for(var i=0;i<numPoints;i+=1){var point=new Array(3).fill(0).map(function(){return(2*Math.random()-1)/NUM_REGIONS});point[0]+=center[0],point[1]+=center[1],point[2]+=center[2],this.points.push(new Point(this.name+" : point_"+i,point,SAMPLES_PER_POINT))}}}]),Region}(),Point=function(){function Point(name,position,timeSamples){var _this=this,tmin=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,tmax=arguments.length>4&&void 0!==arguments[4]?arguments[4]:60;_classCallCheck(this,Point),this.name=name,this.tmin=tmin,this.tmax=tmax,this.domain=new Float32Array(timeSamples).fill(0),this.domain.forEach(function(_,i){var t=i/timeSamples;_this.domain[i]=tmin*(1-t)+tmax*t}),this.originalSignal=new Float32Array(timeSamples).fill(0),this.originalSignal.forEach(function(_,i){_this.originalSignal[i]=2*Math.random()-1}),this.position=position,this.hovered=!1,this.signal=this.originalSignal,this.filters={}}return _createClass(Point,[{key:"applyFilter",value:function(lowPassFilterName,highPassFilterName){var _this2=this;if(this.filters.low!==lowPassFilterName||this.filters.hi!==highPassFilterName){var diffFilter=new differenceequationsignal1d.DifferenceEquationSignal1D;diffFilter.enableBackwardSecondPass;var doFilterUpdate=function(coefficients,input){return coefficients?(diffFilter.setInput(input),diffFilter.setACoefficients(coefficients.a),diffFilter.setBCoefficients(coefficients.b),diffFilter.run(),void(_this2.signal=diffFilter.getOutput())):void(_this2.signal=input)};doFilterUpdate(FILTERS[lowPassFilterName],this.originalSignal),doFilterUpdate(FILTERS[highPassFilterName],this.signal)}}}]),Point}(),RegionSelect=function(_Component){function RegionSelect(props){_classCallCheck(this,RegionSelect);var _this3=_possibleConstructorReturn(this,(RegionSelect.__proto__||Object.getPrototypeOf(RegionSelect)).call(this,props));return _this3.defaultProps={regions:[],selected:[]},_this3}return _inherits(RegionSelect,_Component),_createClass(RegionSelect,[{key:"render",value:function(){var _this4=this,regionElement=function(region,selected,onclick){var c=region.color;return _react2.default.createElement("li",{key:region.name,className:"region-item "+(selected?"selected-region":"unselected-region"),onClick:function(){return onclick(region)},onMouseEnter:function(){_this4.props.hoverRegion(region)},onMouseLeave:function(){_this4.props.hoverRegion(region)}},_react2.default.createElement("div",{className:"region-color-code",style:{backgroundColor:"rgb("+c.r+", "+c.g+", "+c.b+")"}}),region.label+(selected?"*":""))},regionElements=this.props.regions.map(function(region){return _this4.props.selected.find(function(r){return r===region})?regionElement(region,!0,_this4.props.unselectRegion):regionElement(region,!1,_this4.props.selectRegion)});return _react2.default.createElement("div",{className:"region-select"},_react2.default.createElement("ul",{className:"region-select-list"},regionElements))}}]),RegionSelect}(_react.Component),YELLOW=16737832,GREEN=3450963,BLUE=4359668,MRIView=function(_Component2){function MRIView(){return _classCallCheck(this,MRIView),_possibleConstructorReturn(this,(MRIView.__proto__||Object.getPrototypeOf(MRIView)).apply(this,arguments))}return _inherits(MRIView,_Component2),_createClass(MRIView,[{key:"componentDidMount",value:function(){var _this6=this,width=500,height=400,renderer=new THREE.WebGLRenderer;this.canvas=renderer.domElement,this.canvas.width=width,this.canvas.height=height,this.addCanvas(),renderer.setSize(width,height),this.camera=new THREE.PerspectiveCamera(45,width/height,1,1e3),this.controls=new THREE.OrbitControls(this.camera,this.canvas),this.scene=new THREE.Scene,this.mriLoader=new _MRILoader2.default(this.scene),this.meshes=[],this.mriLoader.initialize().then(function(dimensions){function run(){renderer.render(self.scene,self.camera),window.requestAnimationFrame(run.bind(self))}var scale=dimensions.scale/2;_this6.camera.position.z=-dimensions.diagonal/1.7,_this6.camera.lookAt(new THREE.Vector3(0,0,0));var material=new THREE.MeshBasicMaterial({color:YELLOW}),geometry=new THREE.SphereBufferGeometry(scale/(10*NUM_REGIONS),8,8);_this6.props.regions.forEach(function(region,i){region.points.forEach(function(point){var mesh=new THREE.Mesh(geometry,new THREE.MeshBasicMaterial);mesh.material.copy(material),mesh.position.fromArray(point.position),mesh.position.multiplyScalar(scale),_this6.scene.add(mesh),_this6.meshes[i]||(_this6.meshes[i]=[]),_this6.meshes[i].push(mesh)})});var self=_this6;run()})}},{key:"componentDidUpdate",value:function(){var _this7=this;this.addCanvas(),this.props.regions.forEach(function(region,i){region.points.forEach(function(point){_this7.meshes[i]&&(_this7.meshes[i].forEach(function(m){m.material.color.setHex(YELLOW)}),_this7.props.selected.find(function(r){return r===region})&&_this7.meshes[i].forEach(function(m){m.material.color.setHex(GREEN)}),_this7.props.hoveredRegion===region&&_this7.meshes[i].forEach(function(m){m.material.color.setHex(BLUE)}))})})}},{key:"addCanvas",value:function(){this.container&&this.lastContainer!==this.container&&(this.container.appendChild(this.canvas),this.lastContainer=this.container)}},{key:"render",value:function(){var _this8=this;return this.props.showMRI?_react2.default.createElement("div",{className:"mri-view-container",ref:function(div){_this8.container=div}}):null}}]),MRIView}(_react.Component),FilterSelect=function(_Component3){function FilterSelect(props){return _classCallCheck(this,FilterSelect),_possibleConstructorReturn(this,(FilterSelect.__proto__||Object.getPrototypeOf(FilterSelect)).call(this,props))}return _inherits(FilterSelect,_Component3),_createClass(FilterSelect,[{key:"render",value:function(){var _this10=this,optionElement=function(option){return _react2.default.createElement("option",{key:option.key,value:option.key},option.label)};return _react2.default.createElement("select",{className:"signal-filter-dropdown",onChange:function(e){_this10.props.onChange(e.target.value)},value:this.props.filter},this.props.filters.map(optionElement))}}]),FilterSelect}(_react.Component),ZOOM_AMOUNT=1,INTERVAL_MOVE_AMOUNT=1,PLOTS_PER_GROUP=7,countNumPoints=function(regions){return regions.map(function(r){return r.points.length}).reduce(function(a,b){return a+b},0)},SignalPlots=function(_Component4){function SignalPlots(props){_classCallCheck(this,SignalPlots);var _this11=_possibleConstructorReturn(this,(SignalPlots.__proto__||Object.getPrototypeOf(SignalPlots)).call(this,props));return _this11.lastMouseX=null,_this11.drawn=[],_this11.state={cursorX:null,bounds:{tmin:-.1,tmax:25},filters:{low:"none",hi:"none"},group:0},_this11}return _inherits(SignalPlots,_Component4),_createClass(SignalPlots,[{key:"componentWillReceiveProps",value:function(nextProps){var minPlot=(PLOTS_PER_GROUP-1)*this.state.group,numPlots=countNumPoints(nextProps.selected),newGroup=minPlot>numPlots?Math.floor(numPlots/PLOTS_PER_GROUP):this.state.group;this.setState({group:newGroup})}},{key:"componentDidMount",value:function(){var _this12=this;window.addEventListener("mouseup",function(){_this12.lastMouseX=null}),window.addEventListener("resize",function(){_this12.forceUpdate()}),this.renderPlots()}},{key:"componentDidUpdate",value:function(){this.renderPlots()}},{key:"renderPlots",value:function(){var _this13=this;this.width=this.container.getBoundingClientRect().width-20;var HEIGHT=100,_state$bounds=this.state.bounds,tmin=_state$bounds.tmin,tmax=_state$bounds.tmax;this.xAxisTop&&(this.xAxisTop.remove(),this.xAxisTop=void 0),this.xAxisBottom&&(this.xAxisBottom.remove(),this.xAxisBottom=void 0);var pageUpdate=!1;this.state.group!==this.lastGroup&&(this.lastGroup=this.state.group,pageUpdate=!0);var x=d3.scale.linear().domain([tmin,tmax]).rangeRound([0,this.width]),xInv=d3.scale.linear().domain([0,this.width]).range([tmin,tmax]),y=d3.scale.linear().domain([-1.7,1.7]).rangeRound([HEIGHT,0]),yAxis=d3.svg.axis().scale(y).ticks(0).tickValues([-1,0,1]).outerTickSize(0).orient("left"),drawSignalLine=function(g,point,indexes){var signalLine=d3.svg.line().x(function(i){return x(point.domain[i]||0)}).y(function(i){return y(point.signal[i]||0)});return g.append("path").attr("fill","none").attr("stroke","steelblue").attr("stroke-linejoin","round").attr("stroke-linecap","round").attr("stroke-width",1.5).attr("d",signalLine(indexes))},drawSecondTicks=function(g,yAxis,tmin,tmax){for(var ctmin=Math.ceil(tmin),ctmax=Math.ceil(tmax),secondTicks=g.append("g"),_yAxis$node$getBoundi=yAxis.node().getBoundingClientRect(),height=_yAxis$node$getBoundi.height,t=ctmin;t<ctmax;t++)secondTicks.append("line").attr({x1:x(t),y1:0}).attr({x2:x(t),y2:height}).attr("stroke-width",1).attr("stroke","#999");return secondTicks},drawCursorTick=function(g,yAxis,x){var _yAxis$node$getBoundi2=yAxis.node().getBoundingClientRect(),height=_yAxis$node$getBoundi2.height;return g.append("line").attr({x1:x,y1:0}).attr({x2:x,y2:height}).attr("stroke-width",1).attr("stroke","#900")},drawZeroLine=function(g,tmin,tmax){return g.append("line").attr({x1:x(tmin),y1:y(0)}).attr({x2:x(tmax),y2:y(0)}).attr("stroke-width",1).attr("stroke","#555")};this.drawn.forEach(function(drawn){drawn.tagged=!1}),this.drawn.length>0&&this.drawn[this.drawn.length-1].svg.attr("class","signal-plot-item");var numPoints=-1;this.props.selected.forEach(function(region){region.points.forEach(function(point){if(numPoints++,!(numPoints<(PLOTS_PER_GROUP-1)*_this13.state.group||numPoints>(PLOTS_PER_GROUP-1)*(_this13.state.group+1))){point.applyFilter(_this13.state.filters.low,_this13.state.filters.hi);var cursTime="NA",cursVal="NA";_this13.state.cursorX&&(cursTime=Math.floor(100*xInv(_this13.state.cursorX))/100);var ts=point.domain,indexFilter=function(indexes,t,i){return"NA"!==cursTime&&i<ts.length+1&&i<point.signal.length&&cursTime>=t&&cursTime<ts[i+1]&&(cursVal=Math.floor(100*point.signal[i])/100),t>=tmin&&t<=tmax&&indexes.push(i),indexes},indexes=ts.reduce(indexFilter,[]),drawn=_this13.drawn.find(function(d){return d.point===point});if(!pageUpdate&&drawn){var _g=drawn.g,_sigLine=drawn.sigLine,_secondTicks=drawn.secondTicks,_zeroLine=drawn.zeroLine,_yAx=drawn.yAx;return _sigLine.remove(),drawn.cursorTick&&drawn.cursorTick.remove(),_secondTicks.remove(),_zeroLine.remove(),_yAx.call(yAxis),drawn.pointName.text(point.name+" | time: "+cursTime+"s | value: "+cursVal+"uV"),drawn.sigLine=drawSignalLine(_g,point,indexes),drawn.secondTicks=drawSecondTicks(_g,_yAx,tmin,tmax),_this13.state.cursorX&&(drawn.cursorTick=drawCursorTick(_g,_yAx,_this13.state.cursorX)),drawn.zeroLine=drawZeroLine(_g,tmin,tmax),void(drawn.tagged=!0)}var svg=d3.select(_this13.container).append("svg").attr("class","signal-plot-item").attr("height",HEIGHT),g=svg.append("g").attr("transform","translate(30, 0)"),rect=g.append("rect").attr("width","100%"),yAx=g.append("g").call(yAxis),_yAx$node$getBounding=yAx.node().getBoundingClientRect(),height=_yAx$node$getBounding.height,c=region.color,pointName=(svg.append("line").attr({x1:5,y1:0}).attr({x2:5,y2:height}).attr("stroke-width",4).attr("stroke","rgba("+c.r+", "+c.g+", "+c.b+", 1.0)"),g.append("text").attr("x",5).attr("y",height-6).attr("font-size",13).text(point.name+" | time: "+cursTime+"s | value: "+cursVal+"uV"));rect.attr("height",height);var sigLine=drawSignalLine(g,point,indexes),cursorTick=null;_this13.state.cursorX&&(cursorTick=drawCursorTick(g,yAx,_this13.state.cursorX));var secondTicks=drawSecondTicks(g,yAx,tmin,tmax),zeroLine=drawZeroLine(g,tmin,tmax);_this13.drawn.push({point:point,svg:svg,rect:rect,g:g,pointName:pointName,sigLine:sigLine,cursorTick:cursorTick,secondTicks:secondTicks,zeroLine:zeroLine,yAx:yAx,tagged:!0})}})}),this.drawn.forEach(function(drawn,i){drawn.tagged||drawn.svg.remove()}),this.drawn=this.drawn.filter(function(drawn){return drawn.tagged}),this.drawn.forEach(function(drawn,i){return i%2===1?void drawn.rect.attr("fill","#eee"):void drawn.rect.attr("fill","#fff")});var drawXaxis=function(orientation,drawn,xoffset,yoffset){var xAxis=d3.svg.axis().scale(x).ticks(10).outerTickSize(0).orient(orientation);return drawn.g.append("g").call(xAxis).attr("transform","translate("+xoffset+", "+yoffset+")")};this.drawn.length>0&&(this.xAxisTop=drawXaxis("bottom",this.drawn[0],0,0),this.xAxisTop.append("text").attr("x",-23).attr("y",10).text("uV"),this.xAxisBottom=drawXaxis("bottom",this.drawn[this.drawn.length-1],0,HEIGHT),this.xAxisBottom.append("text").attr("x",5).attr("y",28).text("time (sec)"),this.xAxisBottom.append("text").attr("x",-23).attr("y",7).text("uV"),this.drawn[this.drawn.length-1].svg.attr("class","signal-plot-item last-plot")),d3.select(this.container).selectAll(".domain").attr("fill","none").attr("stroke","black").attr("stroke-width",1.5)}},{key:"render",value:function(){var _this14=this,_onWheel=function(dy){var _state$bounds2=_this14.state.bounds,tmin=_state$bounds2.tmin,tmax=_state$bounds2.tmax;tmax-tmin<=5&&dy<0||tmax-tmin>=65&&dy>0||_this14.setState({bounds:{tmin:tmin-Math.sign(dy)*ZOOM_AMOUNT*(tmax-tmin)/15,tmax:tmax+Math.sign(dy)*ZOOM_AMOUNT*(tmax-tmin)/15}})},_onMouseMove=function(dx){if(_this14.lastMouseX){var width=_this14.width||1,_state$bounds3=_this14.state.bounds,tmin=_state$bounds3.tmin,tmax=_state$bounds3.tmax;_this14.lastMouseX+=dx,_this14.setState({bounds:{tmin:tmin-dx*INTERVAL_MOVE_AMOUNT*(tmax-tmin)/width,tmax:tmax-dx*INTERVAL_MOVE_AMOUNT*(tmax-tmin)/width}})}},_onMouseDown=function(shift,leftClick,clientX,target){var _target$getBoundingCl=target.getBoundingClientRect(),left=_target$getBoundingCl.left;return shift&&leftClick?void(_this14.lastMouseX=clientX):void(!shift&&leftClick&&_this14.setState({cursorX:clientX-left}))},enabled=function(text,incr){return _react2.default.createElement("div",{className:"signal-plots-button",onClick:function(){_this14.setState({group:_this14.state.group+incr})}},text)},disabled=function(text){return _react2.default.createElement("div",{className:"signal-plots-button disabled"},text)},numPoints=countNumPoints(this.props.selected),minPlot=(PLOTS_PER_GROUP-1)*this.state.group,maxPlot=(PLOTS_PER_GROUP-1)*(this.state.group+1),showNext=maxPlot<numPoints,showPrev=this.state.group>0;minPlot+(PLOTS_PER_GROUP-1)>=numPoints&&(maxPlot=maxPlot-(numPoints-(minPlot+(PLOTS_PER_GROUP-1)))-1);var selectLow=function(value){_this14.setState({filters:{low:value,hi:_this14.state.filters.hi}})},selectHi=function(value){_this14.setState({filters:{low:_this14.state.filters.low,hi:value}})};return _react2.default.createElement("div",{className:"signal-plots-container"},_react2.default.createElement("div",{className:"signal-plots-toolbar"},_react2.default.createElement("div",{className:"signal-plots-buttons"},showPrev?enabled("Previous",-1):disabled("Previous"),showNext?enabled("Next",1):disabled("Next"),_react2.default.createElement("div",{className:"signal-plots-group-number"},"Showing plots: ",minPlot+1," to ",maxPlot+1," out of ",numPoints)),_react2.default.createElement("div",{className:"signal-plots-filters"},_react2.default.createElement(FilterSelect,{filters:LOW_PASS_FILTERS,filter:this.state.filters.low,onChange:selectLow}),_react2.default.createElement(FilterSelect,{filters:HIGH_PASS_FILTERS,filter:this.state.filters.hi,onChange:selectHi})),_react2.default.createElement("div",{className:"signal-plots-slider"})),_react2.default.createElement("div",{className:"signal-plots",ref:function(container){_this14.container=container},onWheel:function(e){e.shiftKey&&(e.preventDefault(),_onWheel(e.deltaY))},onMouseDown:function(e){_onMouseDown(e.shiftKey,0===e.button,e.clientX,e.target)},onMouseMove:function(e){_onMouseMove(e.clientX-_this14.lastMouseX)}}))}}]),SignalPlots}(_react.Component),EEGBrowser=function(_Component5){function EEGBrowser(props){_classCallCheck(this,EEGBrowser);var _this15=_possibleConstructorReturn(this,(EEGBrowser.__proto__||Object.getPrototypeOf(EEGBrowser)).call(this,props)),regions=makeRegions(NUM_REGIONS);return _this15.state={regions:regions,selected:[regions[0]],expanded:!1},_this15}return _inherits(EEGBrowser,_Component5),_createClass(EEGBrowser,[{key:"render",value:function(){var _this16=this,unselectRegion=function(region){_this16.setState({selected:_this16.state.selected.filter(function(r){return r!==region})})},selectRegion=function(region){_this16.setState({selected:_this16.state.selected.filter(function(r){return r!==region}).concat([region])})},expandBar=_react2.default.createElement("div",{className:"expand-bar",onClick:function(){return _this16.setState({expanded:!_this16.state.expanded})}},_react2.default.createElement("span",{className:"expand-bar-icon"},this.state.expanded?">":"<")),regionSelect=_react2.default.createElement(RegionSelect,{regions:this.state.regions,selected:this.state.selected,unselectRegion:unselectRegion,selectRegion:selectRegion,hoverRegion:function(region){_this16.setState({hoveredRegion:region})},onMouseLeave:function(){_this16.setState({hoveredRegion:null})}}),mriView=_react2.default.createElement(MRIView,{regions:this.state.regions,selected:this.state.selected,hoveredRegion:this.state.hoveredRegion,showMRI:!this.state.expanded});return _react2.default.createElement("div",{className:"eeg-browser"},this.state.expanded?null:regionSelect,mriView,expandBar,_react2.default.createElement(SignalPlots,{selected:this.state.selected}))}}]),EEGBrowser}(_react.Component);exports.default=EEGBrowser,window.EEGBrowser=_react2.default.createFactory(EEGBrowser)},15:function(module,exports){module.exports=React},16:function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_Shaders=__webpack_require__(17),MRI_URL="/eegbrowser/static/samir_mri.mnc",MRILoader=function(){function MRILoader(scene){_classCallCheck(this,MRILoader),this.scene=scene}return _createClass(MRILoader,[{key:"initialize",value:function(){var sliceMatrixSize={},spaceLength={},url2buf=new pixpipe.UrlToArrayBufferReader;new pixpipe.FileToArrayBufferReader;url2buf.addInput(MRI_URL),url2buf.update();var self=this;return new Promise(function(resolve){url2buf.on("ready",function(){var buffer=this.getOutput(),genericDecoder=new pixpipe.Image3DGenericDecoder;if(genericDecoder.addInput(buffer),genericDecoder.update(),!genericDecoder.getNumberOfOutputs())return void console.warn("No output from generic decoder.");var mniVolume=genericDecoder.getOutput();if(mniVolume){var mosaicFilter=new pixpipe.Image3DToMosaicFilter;mosaicFilter.addInput(mniVolume);var space="zspace";if(mosaicFilter.setMetadata("axis",space),mosaicFilter.setMetadata("time",-1),mosaicFilter.update(),!mosaicFilter.getNumberOfOutputs())return void console.warn("No output for mosaicFilter.");for(var textures=[],nbOut=0;nbOut<mosaicFilter.getNumberOfOutputs();nbOut++){var outputMosaic=mosaicFilter.getOutput(nbOut);console.log(outputMosaic),outputMosaic.setMetadata("min",mniVolume.getMetadata("voxel_min")),outputMosaic.setMetadata("max",mniVolume.getMetadata("voxel_max"));var data=outputMosaic.getDataAsUInt8Array(),texture=new THREE.DataTexture(data,outputMosaic.getWidth(),outputMosaic.getHeight(),THREE.LuminanceFormat,THREE.UnsignedByteType);texture.needsUpdate=!0,textures.push(texture)}sliceMatrixSize.x=mosaicFilter.getMetadata("gridWidth"),sliceMatrixSize.y=mosaicFilter.getMetadata("gridHeight"),spaceLength.x=mniVolume.getMetadata("xspace").space_length,spaceLength.y=mniVolume.getMetadata("yspace").space_length,spaceLength.z=mniVolume.getMetadata("zspace").space_length,spaceLength.t=mniVolume.getTimeLength(),this.textures=textures,this.sliceMatrixSize=sliceMatrixSize,this.spaceLength=spaceLength;var diagonal=2*Math.sqrt(spaceLength.x*spaceLength.x+spaceLength.y*spaceLength.y+spaceLength.z*spaceLength.z),scale=Math.min(spaceLength.x,spaceLength.y,spaceLength.z);return self.createMRIPlanes({textures:textures,sliceMatrixSize:sliceMatrixSize,spaceLength:spaceLength}),void resolve({diagonal:diagonal,scale:scale})}console.warn("Non-existant output for genericDecoder."),resolve({diagonal:1,scale:1})})})}},{key:"getDimensions",value:function(){}},{key:"getShaderMaterial",value:function(){return this.shaderMaterial}},{key:"createMRIPlanes",value:function(params){var textures=params.textures,sliceMatrixSize=params.sliceMatrixSize,spaceLength=params.spaceLength,system=new THREE.Object3D;this.shaderMaterial=new THREE.ShaderMaterial({uniforms:{nbOfTextureUsed:{type:"i",value:textures.length},nbSlicePerRow:{type:"f",value:sliceMatrixSize.x},nbSlicePerCol:{type:"f",value:sliceMatrixSize.y},nbSliceTotal:{type:"f",value:spaceLength.z},xspaceLength:{type:"f",value:spaceLength.x},yspaceLength:{type:"f",value:spaceLength.y},zspaceLength:{type:"f",value:spaceLength.z},timespaceLength:{type:"i",value:spaceLength.t},timeIndex:{type:"i",value:0},forcedAlpha:{type:"f",value:1},textures:{type:"t",value:textures},trilinearInterpol:{type:"b",value:!1},curveTexture:{type:"t",value:null},enableCurve:{type:"b",value:!1}},vertexShader:_Shaders.VERTEX,fragmentShader:_Shaders.FRAGMENT,side:THREE.DoubleSide,transparent:!0});var largestSide=2*Math.sqrt(spaceLength.x*spaceLength.x+spaceLength.y*spaceLength.y+spaceLength.z*spaceLength.z),zPlaneGeometry=new THREE.PlaneBufferGeometry(largestSide,largestSide,1),zPlaneMesh=new THREE.Mesh(zPlaneGeometry,this.shaderMaterial);system.add(zPlaneMesh);var xPlaneGeometry=new THREE.PlaneBufferGeometry(largestSide,largestSide,1),xPlaneMesh=new THREE.Mesh(xPlaneGeometry,this.shaderMaterial);xPlaneMesh.rotation.y=Math.PI/2,system.add(xPlaneMesh);var zPlaneGeometry=new THREE.PlaneBufferGeometry(largestSide,largestSide,1),zPlaneMesh=new THREE.Mesh(zPlaneGeometry,this.shaderMaterial);zPlaneMesh.rotation.x=Math.PI/2,system.add(zPlaneMesh),this.scene.add(system)}}]),MRILoader}();exports.default=MRILoader},17:function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.VERTEX="\n  precision highp float;\n  varying  vec2 vUv;\n  varying  vec4 worldCoord;\n  void main()\n  {\n    vUv = uv;\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n    worldCoord = modelMatrix * vec4( position, 1.0 );\n  }\n",exports.FRAGMENT="\n  precision highp float;\n  // a max number we allow, can be upt to 16\n  const int maxNbOfTextures = 15;\n  // Number of texture used with this dataset\n  // cannot be higher than maxNbOfTextures\n  uniform int nbOfTextureUsed;\n  // size of the mosaic\n  uniform float nbSlicePerRow;\n  uniform float nbSlicePerCol;\n  // not necessary equal to nbSlicePerRow*nbSlicePerCol because last line\n  // is not necessary full\n  uniform float nbSliceTotal;\n  // space length\n  uniform float xspaceLength;\n  uniform float yspaceLength;\n  uniform float zspaceLength;\n  uniform int timespaceLength;\n  // the index within the timeseries\n  uniform int timeIndex;\n  uniform float forcedAlpha;\n  // a texture will contain a certain number of slices\n  uniform sampler2D textures[maxNbOfTextures];\n  // enabling the trilinear interpolation\n  uniform bool trilinearInterpol;\n  // texture that represent the curve data to look up\n  uniform sampler2D curveTexture;\n  // enable contrast curve\n  uniform bool enableCurve;\n  // Shared with the vertex shader\n  varying  vec4 worldCoord;\n  varying  vec2 vUv;\n  /**\n  * Returns accurate MOD when arguments are approximate integers.\n  */\n  float modI(float a,float b) {\n      float m = a - floor( ( a + 0.0001 ) / b) * b;\n      return floor( m + 0.0001 );\n  }\n  // return the color corresponding to the given shifted world cooridinates\n  // using a neirest neighbors approx (no interpolation)\n  vec4 getIntensityWorldNearest(vec3 swcin, int timeRecord){\n    vec3 swc = swcin.xzy;\n    // step to jump from a slice to another on a unit-sized texture\n    float sliceWidth = 1.0 / nbSlicePerRow;\n    float sliceHeight = 1.0 / nbSlicePerCol;\n    float rounder = 0.001;\n    // to be kept\n    float indexSliceToDisplay = floor( float(timeRecord) * zspaceLength   + swc.z + rounder);\n    int indexTextureInUse = int(floor(rounder + indexSliceToDisplay / (nbSlicePerRow*nbSlicePerCol)));\n    float rowTextureAbsolute = floor( (indexSliceToDisplay + rounder) / nbSlicePerRow);\n    float rowTexture = rowTextureAbsolute - (float(indexTextureInUse) * nbSlicePerCol) ;\n    float colTexture = modI( indexSliceToDisplay, nbSlicePerRow );\n    // switch to a center-pixel reference (shift of half a pixel in unit-sized texture)\n    float halpPixH = sliceWidth / xspaceLength / 2.0;\n    float halpPixV = sliceHeight / yspaceLength / 2.0;\n    // avoid being exactely between 2 slices because it can produce unpredictable result (stripes)\n    if(mod(swc.x, 0.5) == 0.0){\n      swc.x -= rounder;\n    }\n    // avoid being exactely between 2 slices because it can produce unpredictable result (stripes)\n    if(mod(swc.y, 0.5) == 0.0){\n      swc.y -= rounder;\n    }\n    // the actual textel 2D position of this 3D word coordinate\n    vec2 posInTexture = vec2(\n      sliceWidth * colTexture + ( swc.x/xspaceLength * sliceWidth) + halpPixH,\n      sliceHeight * rowTexture + (1.0 / nbSlicePerCol  - swc.y/yspaceLength * sliceHeight) + halpPixV\n    );\n    vec4 color;\n    // fetching the color in the texture (loops are not allowed)\n    if(indexTextureInUse == 0){\n      color = texture2D(textures[0], posInTexture);\n    }else if(indexTextureInUse == 1){\n      color = texture2D(textures[1], posInTexture);\n    }else if(indexTextureInUse == 2){\n      color = texture2D(textures[2], posInTexture);\n    }else if(indexTextureInUse == 3){\n      color = texture2D(textures[3], posInTexture);\n    }else if(indexTextureInUse == 4){\n      color = texture2D(textures[4], posInTexture);\n    }else if(indexTextureInUse == 5){\n      color = texture2D(textures[5], posInTexture);\n    }else if(indexTextureInUse == 6){\n      color = texture2D(textures[6], posInTexture);\n    }else if(indexTextureInUse == 7){\n      color = texture2D(textures[7], posInTexture);\n    }else if(indexTextureInUse == 8){\n      color = texture2D(textures[8], posInTexture);\n    }else if(indexTextureInUse == 9){\n      color = texture2D(textures[9], posInTexture);\n    }else if(indexTextureInUse == 10){\n      color = texture2D(textures[10], posInTexture);\n    }else if(indexTextureInUse == 11){\n      color = texture2D(textures[11], posInTexture);\n    }else if(indexTextureInUse == 12){\n      color = texture2D(textures[12], posInTexture);\n    }else if(indexTextureInUse == 13){\n      color = texture2D(textures[13], posInTexture);\n    }else if(indexTextureInUse == 14){\n      color = texture2D(textures[14], posInTexture);\n    }/*else if(indexTextureInUse == 15){\n      color = texture2D(textures[15], posInTexture);\n    }else if(indexTextureInUse == 16){\n      color = texture2D(textures[16], posInTexture);\n    }else if(indexTextureInUse == 17){\n      color = texture2D(textures[17], posInTexture);\n    }else if(indexTextureInUse == 18){\n      color = texture2D(textures[18], posInTexture);\n    }else if(indexTextureInUse == 19){\n      color = texture2D(textures[19], posInTexture);\n    }else if(indexTextureInUse == 20){\n      color = texture2D(textures[20], posInTexture);\n    }else if(indexTextureInUse == 21){\n      color = texture2D(textures[21], posInTexture);\n    }else if(indexTextureInUse == 22){\n      color = texture2D(textures[22], posInTexture);\n    }else if(indexTextureInUse == 23){\n      color = texture2D(textures[23], posInTexture);\n    }else if(indexTextureInUse == 24){\n      color = texture2D(textures[24], posInTexture);\n    }else if(indexTextureInUse == 25){\n      color = texture2D(textures[25], posInTexture);\n    }*/\n    return color;\n  }\n  vec4 getIntensityWorldTrilinear( vec3 swc, int timeRecord ){\n    // For the sake of readability, let's assume that:\n    float xBottom = floor(swc.x + 0.05);\n    float yBottom = floor(swc.y + 0.05);\n    float zBottom = floor(swc.z + 0.05);\n    float xTop = floor(xBottom + 1.05);\n    float yTop = floor(yBottom + 1.05);\n    float zTop = floor(zBottom + 1.05);\n    // making a normalized space out of our coordinates\n    float xNorm = swc.x - xBottom;\n    float yNorm = swc.y - yBottom;\n    float zNorm = swc.z - zBottom;\n    // fetching the colors at each corner\n    vec4 V000 = getIntensityWorldNearest( vec3(xBottom, yBottom, zBottom), timeRecord );\n    vec4 V100 = getIntensityWorldNearest( vec3(xTop, yBottom, zBottom), timeRecord );\n    vec4 V010 = getIntensityWorldNearest( vec3(xBottom, yTop, zBottom), timeRecord );\n    vec4 V001 = getIntensityWorldNearest( vec3(xBottom, yBottom, zTop), timeRecord );\n    vec4 V101 = getIntensityWorldNearest( vec3(xTop, yBottom, zTop), timeRecord );\n    vec4 V011 = getIntensityWorldNearest( vec3(xBottom, yTop, zTop), timeRecord );\n    vec4 V110 = getIntensityWorldNearest( vec3(xTop, yTop, zBottom), timeRecord );\n    vec4 V111 = getIntensityWorldNearest( vec3(xTop, yTop, zTop), timeRecord );\n    vec4 interpVal = V000 * (1. - xNorm) * (1. - yNorm) * (1. - zNorm) +\n                     V100 * xNorm * (1. - yNorm) * (1. - zNorm) +\n                     V010 * (1. - xNorm) * yNorm * (1. - zNorm) +\n                     V001 * (1. - xNorm) * (1. - yNorm) * zNorm +\n                     V101 * xNorm * (1. - yNorm) * zNorm +\n                     V011 * (1. - xNorm) * yNorm * zNorm +\n                     V110 * xNorm * yNorm * (1. - zNorm) +\n                     V111 * xNorm * yNorm * zNorm;\n    return interpVal;\n  }\n  // return true id the shifted world cooridinates (swc) is outside the volume\n  // then we can hide what is ouside\n  bool isOusideTheVolume( vec3 swc ){\n    return swc.x < 0.0 || swc.x > xspaceLength ||\n           swc.y < 0.0 || swc.y > yspaceLength ||\n           swc.z < 0.0 || swc.z > zspaceLength;\n  }\n  // return true if the shifted world cooridinates (swc) is just on the internal\n  // edge. Then we can display a thin line for edges\n  bool isInternalEdge( vec3 swc ){\n    float edgeSize = 0.5;\n    return swc.x < edgeSize || swc.x > (xspaceLength - edgeSize) ||\n           swc.y < edgeSize || swc.y > (yspaceLength - edgeSize) ||\n           swc.z < edgeSize || swc.z > (zspaceLength - edgeSize);\n  }\n  void main( void ) {\n    // worldCoord is [0, n], but the box is centered on 0 to make rotation work better\n    // so worldCoordShifted is like worldCoord but shifted of half size in each direction\n    vec3 worldCoordShifted = vec3( worldCoord.x + xspaceLength/2.0, worldCoord.y + yspaceLength/2.0, worldCoord.z + zspaceLength/2.0);\n\n    // This version makes the antero side up (default: down)\n    //vec3 worldCoordShifted = vec3( worldCoord.x + xspaceLength/2.0, -1.0*worldCoord.y + yspaceLength/2.0, -1.0*worldCoord.z + zspaceLength/2.0);\n    //vec3 worldCoordShifted = vec3( worldCoord.x + xspaceLength/2.0, worldCoord.y + yspaceLength/2.0, -1.0*worldCoord.z + zspaceLength/2.0);\n    // hide the outside\n    if( isOusideTheVolume(worldCoordShifted) )\n    {\n        discard;\n        return;\n    }\n    // color at the edges of the volume\n    if( isInternalEdge(worldCoordShifted) )\n    {\n        gl_FragColor = vec4(0.7, 0.7, 1.0, 1.0);\n        return;\n    }\n    vec4 color;\n    // interpolation (or not)\n    if(trilinearInterpol){\n      color = getIntensityWorldTrilinear(worldCoordShifted, timeIndex);\n    }else{\n      color = getIntensityWorldNearest(worldCoordShifted, timeIndex);\n    }\n    // use curve for contrast\n    if(enableCurve){\n      vec4 curveColor = texture2D(curveTexture, vec2(color.r, 0.5));\n      color.r = curveColor.r;\n      color.g = curveColor.g;\n      color.b = curveColor.b;\n    }\n    // forcing a lower alpha (when given)\n    color.a = min(color.a, forcedAlpha);\n    gl_FragColor = color;\n  }\n";
}});
//# sourceMappingURL=EEGBrowser.js.map